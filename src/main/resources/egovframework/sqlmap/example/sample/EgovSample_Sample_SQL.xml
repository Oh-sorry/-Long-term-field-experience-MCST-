<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">


<sqlMap namespace="Sample">

	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="searchVO" type="egovframework.example.sample.service.SampleDefaultVO"/>

	<resultMap id="sample" class="egovframework.example.sample.service.SampleVO">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="description" column="description"/>
		<result property="useYn" column="use_yn"/>
		<result property="regUser" column="reg_user"/>
	</resultMap>
	
	<!-- 메인 페이지 ( 게시글 리스트 ) -->
	<select id="sampleDAO.testList" parameterClass="searchVO" resultClass="egovMap">
		SELECT ROWNUM RNUM, IDX, WRITER, TITLE, regDate, code
		FROM TEST 
		WHERE 1=1 
		<isEqual prepend="AND" property="searchCondition" compareValue="idx">
			idx LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="writer">
			writer LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="title">
			title LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		ORDER BY code desc
		LIMIT #recordCountPerPage# OFFSET #firstIndex#
	</select>
	
	<select id="sampleDAO.testListCnt" parameterClass="searchVO" resultClass="int">
		SELECT COUNT(*) FROM TEST WHERE 1=1
	</select>
	
	<!-- 상세 페이지 조회 -->
	<select id="sampleDAO.testListDetail" parameterClass="searchVO" resultClass="searchVO">
		SELECT rownum rnum, idx, writer, title, CLOB_TO_CHAR(content) as content, regDate, code
		FROM test
		WHERE 1=1 AND code=#code#
		ORDER BY RNUM ASC
	</select>
	
	<!-- insert test -->
	<insert id="sampleDAO.insertTest" parameterClass="searchVO">
		INSERT INTO test
		( title, writer, content, idx, regDate, fileName, code)
		VALUES ( #title#, #writer#, #content#, #idx#, NOW(), #fileName#, serial_code.NEXT_VALUE)
	</insert>
	
	<!-- update page -->
	<select id="sampleDAO.testListUpdate" parameterClass="searchVO" resultClass="searchVO">
		SELECT rownum rnum, idx, writer, title, CLOB_TO_CHAR(content) as content, regDate, code
		FROM test
		WHERE 1=1 AND code=#code#
		ORDER BY RNUM ASC
	</select>
	
	<!-- update board-->
	<update id="sampleDAO.updateTest" parameterClass="searchVO">
		UPDATE test
		SET title = #title#,
			writer=#writer#,
			content = #content#,
			regDate = NOW(),
			idx=#idx#
		WHERE code=#code#
	</update>
	
	<!-- delete board -->
	<delete id="sampleDAO.deleteTest" parameterClass="searchVO">
		DELETE FROM test
		WHERE code=#code#
	</delete>
	
	<!-- 첨부파일 업로드 -->
	<insert id ="sampleDAO.insertFile" parameterClass="searchVO">
		INSERT INTO tb_file (
			fileId,
			boardIdx,
			orgFileName,
			saveFileName,
			fileSize
		) values (
			serial_fileId.NEXT_VALUE,
			serial_code.CURRENT_VALUE,
			#orgFileName#,
			#saveFileName#,
			#fileSize#
		)
	</insert>

	<!-- 첨부파일 조회 -->
	<select id="sampleDAO.fileList" parameterClass="searchVO" resultClass="searchVO">
		SELECT orgFileName, fileId, boardIdx, saveFileName, round(fileSize/1024, 1) AS fileSize
		FROM tb_file
		WHERE boardIdx = #code#
	</select>

	<!-- 첨부파일 다운로드 -->
	<select id="sampleDAO.downloadFile" parameterClass="searchVO" resultClass="searchVO">
		SELECT saveFileName, orgFileName
		FROM tb_file
		WHERE fileId = #fileId#
	</select>

	<!-- 첨부파일 삭제 -->
	<delete id="sampleDAO.deleteFile" parameterClass="int">
		DELETE FROM tb_file
		where fileId=#fileId#
	</delete>
	
	<!-- 글 전체 첨부파일 삭제 -->
	<delete id="sampleDAO.deleteFileAll" parameterClass="searchVO">
		DELETE FROM tb_file
		where boardIdx=#code#
	</delete>
	
	<!-- excel -->
	<select id="sampleDAO.excelDownload" fetchSize="10" parameterClass="searchVO" resultClass="searchVO">
		SELECT ROWNUM RNUM, IDX, WRITER, TITLE, regDate
		FROM test
		where 1=1
		<isEqual prepend="AND" property="searchCondition" compareValue="idx">
			idx LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="writer">
			writer LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		<isEqual prepend="AND" property="searchCondition" compareValue="title">
			title LIKE '%' || #searchKeyword# || '%'
		</isEqual>
		ORDER BY RNUM ASC
	</select>
	
	<!-- 댓글 기능 -->
	<!-- 댓글 조회 -->
	<select id="sampleDAO.replyList" parameterClass="searchVO" resultClass="searchVO">
		SELECT rno, replyIdx, replyWriter, replyContent, replyDate
		FROM tb_reply
		WHERE replyIdx = #code#
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="sampleDAO.replyInsert" parameterClass="searchVO">
		INSERT INTO tb_reply(rno, replyIdx, replyWriter, replyContent, replyDate)
		VALUES(serial_rno.NEXT_VALUE, #code#, #replyWriter#, #replyContent#, NOW())
	</insert>
	<!-- 댓글 수정 -->
	<!-- 댓글 삭제 -->
	<delete id="sampleDAO.replyDelete" parameterClass="int">
		DELETE FROM tb_reply
		WHERE rno=#rno#
	</delete>
	<!-- 글 전체 댓글 삭제 -->
	<delete id="sampleDAO.replyDeleteAll" parameterClass="searchVO">
		DELETE FROM tb_reply
		WHERE replyIdx=#code#
	</delete>

	<!-- 회원 관리 -->
	<!-- 로그인 체크 -->
 	<select id="sampleDAO.loginCheck" resultClass="String">
		SELECT userName
		FROM member
		WHERE userId = #userId# AND userPw = #userPw#
	</select>
	<!-- 로그인 정보 -->
	<select id="sampleDAO.viewMember" resultClass="searchVO">
		SELECT userId, userPw, userName, userEmail, userRegdate
		FROM member
		WHERE userId = #userId# AND userPw = #userPw#
	</select>
	
	<!-- 회원 등록 -->
	<insert id="sampleDAO.memberInsert" parameterClass="searchVO">
		INSERT INTO member(userId, userPw, userName, userEmail, userRegdate)
		VALUES(#userId#, #userPw#, #userName#, #userEmail#, NOW())
	</insert>
	
	<!-- 회원 수정 -->
	<update id="sampleDAO.memberUpdate" parameterClass="searchVO">
		UPDATE member
		SET userPw = #userPw#,
			userName=#userName#,
			userEmail = #userEmail#,
			userRegdate = NOW()
		WHERE userId=#userId#
	</update>
	
	<!-- 회원 정보 조회 -->
	<select id="sampleDAO.viewUpdate" resultClass="searchVO">
		SELECT userId, userPw, userName, userEmail, userRegdate
		FROM member
		WHERE userId = #userId#
	</select>
	
	<!-- 회원 삭제 -->
	<delete id="sampleDAO.memberDelete">
		DELETE FROM member
		WHERE userId=#userId#
	</delete>
	
	<!-- 비밀번호 체크 -->
	<select id="sampleDAO.checkPw" resultClass="int">
		SELECT COUNT(*)
		FROM member
		WHERE userId=#userId# AND userPw=#userPw#
	</select>
</sqlMap>